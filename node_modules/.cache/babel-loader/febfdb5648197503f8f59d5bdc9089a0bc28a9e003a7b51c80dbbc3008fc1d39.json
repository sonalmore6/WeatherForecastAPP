{"ast":null,"code":"var _jsxFileName = \"E:\\\\weatherapp\\\\weather-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport WeatherCard from \"./WeatherCard\";\nimport WeatherGraph from \"./WeatherGraph\";\nimport SearchBar from \"./SearchBar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const defaultCities = [\"New York\", \"London\", \"Paris\", \"Tokyo\", \"Mumbai\"];\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const fetchWeatherData = async city => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/weather/${city}`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n      alert(`Unable to fetch data for ${city}.`);\n      return null;\n    }\n  };\n  useEffect(() => {\n    // Fetch weather data for default cities on load\n    const initializeDefaultCities = async () => {\n      const dataPromises = defaultCities.map(city => fetchWeatherData(city));\n      const results = await Promise.all(dataPromises);\n      setCities(results.filter(data => data !== null)); // Filter out failed fetches\n    };\n    initializeDefaultCities();\n  }, []);\n  const addCity = async city => {\n    if (cities.find(c => c.city === city)) {\n      alert(\"City already added.\");\n      return;\n    }\n    const data = await fetchWeatherData(city);\n    if (data) setCities([...cities, data]);\n  };\n  const removeCity = city => {\n    setCities(cities.filter(c => c.city !== city));\n  };\n  const cityData = {\n    city: \"New York\",\n    currentTemp: 25,\n    highTemp: 30,\n    lowTemp: 20,\n    condition: \"Sunny\",\n    forecast: [{\n      day: \"Monday\",\n      temp: 28\n    }, {\n      day: \"Tuesday\",\n      temp: 27\n    }, {\n      day: \"Wednesday\",\n      temp: 26\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center my-4\",\n      children: \"Weather Forecast Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: addCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-cards row\",\n      children: cities.map(cityData => /*#__PURE__*/_jsxDEV(WeatherCard, {\n        data: cityData,\n        onRemove: removeCity,\n        onSelect: () => setSelectedCity(cityData)\n      }, cityData.city, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), selectedCity && /*#__PURE__*/_jsxDEV(WeatherGraph, {\n      data: selectedCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ForecastCard, {\n        data: cityData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1ET5O4FcDZj1XJeXTTvj07Inv7U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","WeatherCard","WeatherGraph","SearchBar","jsxDEV","_jsxDEV","App","_s","defaultCities","cities","setCities","selectedCity","setSelectedCity","fetchWeatherData","city","response","get","data","error","console","alert","initializeDefaultCities","dataPromises","map","results","Promise","all","filter","addCity","find","c","removeCity","cityData","currentTemp","highTemp","lowTemp","condition","forecast","day","temp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onRemove","onSelect","ForecastCard","_c","$RefreshReg$"],"sources":["E:/weatherapp/weather-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport WeatherCard from \"./WeatherCard\";\nimport WeatherGraph from \"./WeatherGraph\";\nimport SearchBar from \"./SearchBar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const defaultCities = [\"New York\", \"London\", \"Paris\", \"Tokyo\", \"Mumbai\"];\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(null);\n\n  const fetchWeatherData = async (city) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/weather/${city}`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n      alert(`Unable to fetch data for ${city}.`);\n      return null;\n    }\n  };\n\n  useEffect(() => {\n    // Fetch weather data for default cities on load\n    const initializeDefaultCities = async () => {\n      const dataPromises = defaultCities.map((city) => fetchWeatherData(city));\n      const results = await Promise.all(dataPromises);\n      setCities(results.filter((data) => data !== null)); // Filter out failed fetches\n    };\n    initializeDefaultCities();\n  }, []);\n\n  const addCity = async (city) => {\n    if (cities.find((c) => c.city === city)) {\n      alert(\"City already added.\");\n      return;\n    }\n    const data = await fetchWeatherData(city);\n    if (data) setCities([...cities, data]);\n  };\n\n  const removeCity = (city) => {\n    setCities(cities.filter((c) => c.city !== city));\n  };\n\n  const cityData = {\n    city: \"New York\",\n    currentTemp: 25,\n    highTemp: 30,\n    lowTemp: 20,\n    condition: \"Sunny\",\n    forecast: [\n      { day: \"Monday\", temp: 28 },\n      { day: \"Tuesday\", temp: 27 },\n      { day: \"Wednesday\", temp: 26 },\n    ],\n  };\n  return (\n    <div className=\"App container\">\n      <h1 className=\"text-center my-4\">Weather Forecast Dashboard</h1>\n      <SearchBar onSearch={addCity} />\n      <div className=\"weather-cards row\">\n        {cities.map((cityData) => (\n          <WeatherCard\n            key={cityData.city}\n            data={cityData}\n            onRemove={removeCity}\n            onSelect={() => setSelectedCity(cityData)}\n          />\n        ))}\n      </div>\n      {selectedCity && <WeatherGraph data={selectedCity} />}\n      <div className=\"container\">\n      <h1>Weather Forecast</h1>\n      <ForecastCard data={cityData} />\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}